{"version":3,"sources":["components/ErrorMsg.js","methods/index.js","contexts/index.js","components/Nav/Search.js","components/Nav/Navbar.js","components/Tile/TileContainer.js","components/Header.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ErrorMsg","_ref","msg","a","createElement","className","serialize","data","baseUrl","compiled","id","kind","name","slice","title","author","picture","url","banner_img","header_img","icon_img","thumbnail","score","subscribers","description","creation","calcTime","created_utc","permalink","pluralize","num","words","Math","floor","concat","utcTime","time","Date","getTime","toFixed","StoreContext","React","createContext","StoreConsumer","Consumer","StoreProvider","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","favorited","handleSearch","handleFavoriting","handleUnfavoriting","favorites","searchError","handleInitialDataFetch","fetch","then","r","json","console","log","setState","prevState","children","map","el","catch","err","error","handlePersistingFavs","savedFavs","localStorage","getItem","JSON","parse","makeFunctionsAvailable","tile","newFavs","push","objectSpread","setItem","stringify","tileId","filter","fav","rawData","setTimeout","inherits","createClass","key","value","react_default","Provider","props","Component","Search","text","handleChange","e","defineProperty","target","clearSearch","prepareSearchQuery","replace","handleSubmit","preventDefault","query","method","context","onSubmit","type","placeholder","onChange","PureComponent","contextType","Navbar","memo","contexts","ctx","NavLink","exact","to","activeClassName","Nav_Search","withRouter","Tile","lazy","bind","TileContainer","renderTiles","favs","_this2","react","delayMs","fallback","Header","search","Home","Fragment","components_Header","Tile_TileContainer","Favorites","App","Nav_Navbar","Switch","Route","path","component","render","Boolean","window","location","hostname","match","require","transform","plugins","exclude","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.150c6145.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ErrorMsg = ({ msg }) => {\r\n\r\n  return (\r\n    <div className='error-msg'>\r\n      { msg }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMsg","export const serialize = (data) => {\r\n\r\n  const baseUrl = `https://www.reddit.com`\r\n  const compiled = {}\r\n\r\n  compiled.id = data.id\r\n  compiled.kind = data.name.slice(0,2)\r\n  compiled.title = data.title || \"\"\r\n  compiled.author = data.author || data.name || \"\"\r\n  compiled.picture = compiled.kind === 't3' ? data.url : data.banner_img || data.header_img || data.icon_img || \"http://i.imgur.com/lqHeX.jpg\"\r\n  compiled.thumbnail = data.thumbnail || \"\"\r\n  compiled.score = data.score || data.subscribers || 0\r\n  compiled.description = data.description || \"\"\r\n  compiled.creation = calcTime(data.created_utc)\r\n  compiled.url = data.permalink ? baseUrl + data.permalink : baseUrl + data.url  \r\n\r\n  return compiled\r\n}\r\n\r\nexport const pluralize = (num, words) => {\r\n  \r\n  if (Math.floor(num) === 1) {\r\n    return num + ` ${words}`\r\n\r\n  } else {\r\n    return num + ` ${words}s`\r\n  }\r\n}\r\n\r\nexport const calcTime = (utcTime) => {\r\n\r\n  let time = ((new Date().getTime() - new Date(utcTime * 1000)) / (1000 * 60 * 60))\r\n\r\n  if (time > 24) {\r\n\r\n    time = ((new Date().getTime() - new Date(utcTime * 1000)) / (1000 * 60 * 60 * 24)).toFixed(0)\r\n    return pluralize(time, `day`) + ` ago`\r\n\r\n  } else if (time < 1) {\r\n\r\n    time = ((new Date().getTime() - new Date(utcTime * 1000)) / (1000 * 60)).toFixed(0)\r\n    return pluralize(time, `minute`) + ` ago`\r\n\r\n  } else {\r\n\r\n    time = time.toFixed(0)\r\n    return pluralize(time, `hour`) + ` ago`\r\n  }\r\n}","import React from 'react';\r\nimport { serialize } from \"../methods\";\r\n\r\nconst StoreContext = React.createContext();\r\n\r\nexport const StoreConsumer = StoreContext.Consumer\r\n\r\nexport class StoreProvider extends React.Component {\r\n\r\n  state = {\r\n    favorited: 0,\r\n    handleSearch: null,\r\n    handleFavoriting: null,\r\n    handleUnfavoriting: null,\r\n    favorites: [],\r\n    data: null,\r\n    searchError: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(`ctx mounted`)\r\n    this.handleInitialDataFetch()\r\n    this.handlePersistingFavs()\r\n    this.makeFunctionsAvailable()\r\n  }\r\n\r\n  handleInitialDataFetch = () => {\r\n    fetch(\"https://www.reddit.com/r/analog/top/.json\")\r\n      .then(r => r.json())\r\n      .then(r => {\r\n        console.log(r)\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n            data: r.data.children.map(el => serialize(el.data))\r\n          }\r\n        }, () => console.log(this.state))\r\n      })\r\n      .catch(err => console.error(err))\r\n  }\r\n  \r\n\r\n  handlePersistingFavs = () => {\r\n    const savedFavs = localStorage.getItem(\"favs\")\r\n    const favorites = JSON.parse(savedFavs)\r\n\r\n    if (savedFavs) {\r\n      this.setState({\r\n\r\n        favorites,\r\n        favorited: favorites.length\r\n\r\n      }, () => console.log(`StoreProvider DidMount:`, this.state))\r\n    }\r\n  }\r\n\r\n  makeFunctionsAvailable = () => {\r\n\r\n    this.setState({\r\n      handleSearch: this.handleSearch,\r\n      handleFavoriting: this.handleFavoriting,\r\n      handleUnfavoriting: this.handleUnfavoriting\r\n    });\r\n  }\r\n\r\n  handleFavoriting = (tile) => {\r\n    this.setState(prevState => {\r\n\r\n      const savedFavs = localStorage.getItem('favs')\r\n      let newFavs\r\n\r\n      if(savedFavs) {\r\n        newFavs = JSON.parse(savedFavs)\r\n      \r\n      } else {\r\n        newFavs = prevState.favorites\r\n      }\r\n\r\n      newFavs.push({...tile})\r\n\r\n      localStorage.setItem('favs', JSON.stringify(newFavs))\r\n\r\n      return {\r\n        favorited: ++prevState.favorited,\r\n        favorites: newFavs\r\n      }\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  handleUnfavoriting = (tileId) => {\r\n\r\n    const savedFavs = localStorage.getItem(\"favs\")\r\n    let newFavs\r\n    \r\n    this.setState(prevState => {\r\n      \r\n      if(savedFavs) {\r\n        newFavs = JSON.parse(savedFavs).filter(fav => fav.id !== tileId)\r\n      \r\n      } else {\r\n        newFavs = prevState.favorites.filter(fav => fav.id !== tileId)  \r\n      }\r\n\r\n      localStorage.setItem('favs', JSON.stringify(newFavs))\r\n\r\n      return {\r\n        favorited: --prevState.favorited,\r\n        favorites: newFavs\r\n      }\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  handleSearch = (rawData) => {\r\n\r\n    if(rawData.error || !rawData.data.children.length) {\r\n\r\n      this.setState({\r\n        searchError: true\r\n      })\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          searchError: false\r\n        })\r\n      }, 2500)\r\n\r\n      return\r\n    }\r\n\r\n    console.log(rawData.data.children)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        data: rawData.data.children.map(el => serialize(el.data))\r\n      }\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StoreContext.Provider value={this.state}>\r\n        { this.props.children }\r\n      </StoreContext.Provider>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { StoreConsumer } from '../../contexts';\r\n\r\nclass Search extends React.PureComponent {\r\n\r\n  static contextType = StoreConsumer;\r\n\r\n  state = {\r\n    text: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      text: ''\r\n    })\r\n  }\r\n  \r\n  prepareSearchQuery = () => {\r\n    const query = this.state.text\r\n\r\n    return query.replace(' ', '')\r\n  }\r\n  \r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // const url = `https://www.reddit.com/subreddits/search.json?q=${this.state.text}`\r\n    console.log(this.state.text)\r\n\r\n    const query = this.prepareSearchQuery()\r\n    const url = `https://www.reddit.com/r/${query}/top/.json`;\r\n    const options = {\r\n      method: 'GET'\r\n    }\r\n\r\n    fetch(url, options)\r\n    .then(r => r.json())\r\n    .then(r => {\r\n      console.log(`raw`, r)\r\n      this.context.handleSearch(r)\r\n      this.clearSearch()\r\n    })\r\n    .catch(err => {\r\n      console.error(err)\r\n      this.clearSearch()\r\n    })\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input type='text' className='search-bar' name='text' placeholder='search subreddits' value={this.state.text} onChange={this.handleChange} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search","import React, { memo } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport Search from \"./Search\";\r\nimport { StoreConsumer } from '../../contexts';\r\n\r\nconst Navbar = memo(() => {\r\n\r\n\r\n  return (\r\n\r\n    <StoreConsumer>\r\n\r\n      {ctx => (\r\n\r\n        <nav className=\"nav-bar\">\r\n\r\n          <NavLink exact to=\"/\" className=\"nav-item\" activeClassName=\"active\">\r\n            <i className=\"fab fa-reddit-alien\" />\r\n            Home\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/favorites\" className=\"nav-item\" activeClassName=\"active\">\r\n            <i className=\"fas fa-heart\" />\r\n            Favorites ({ ctx.favorited })\r\n          </NavLink>\r\n\r\n          <Search />\r\n        </nav>\r\n      \r\n      )}\r\n  \r\n    </StoreConsumer>\r\n  ); \r\n})\r\n\r\nexport default withRouter(Navbar)","import React, { Component, Suspense, lazy } from 'react';\r\nimport { StoreConsumer } from '../../contexts';\r\nimport ErrorMsg from '../ErrorMsg';\r\n\r\nconst Tile = lazy(() => import('./Tile'))\r\n\r\n\r\nclass TileContainer extends Component {\r\n\r\n  static contextType = StoreConsumer;\r\n\r\n  state = {\r\n    data: null,\r\n  }\r\n\r\n  renderTiles = () => {\r\n    return this.state.data.map(tile => {\r\n\r\n      let favs = localStorage.getItem('favs')\r\n\r\n      if (favs) {\r\n        favs = JSON.parse(favs)\r\n\r\n        const fav = favs.filter(el => el.id === tile.id)\r\n\r\n        if (fav.length) {\r\n          return <Tile key={tile.id} tile={tile} fav={true} />\r\n        }\r\n      }\r\n\r\n      return <Tile key={tile.id} tile={tile} fav={false} />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <StoreConsumer>\r\n        { ctx => {\r\n          \r\n          if(ctx.data !== this.state.data) {\r\n            this.setState({\r\n                data: ctx.data\r\n            }, () => console.log(`updated state`))\r\n          }\r\n\r\n          return (\r\n\r\n            <main className='tile-area'>\r\n              <Suspense delayMs={1000} fallback={<div>Loading...</div>}>\r\n\r\n                { ctx.searchError ? <ErrorMsg msg={`Unfortunately such a subreddit can't be found`} /> : null }\r\n\r\n                { this.state.data ? this.renderTiles() : null }\r\n\r\n              </Suspense>\r\n            </main>\r\n\r\n          )}\r\n        }\r\n      </StoreConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TileContainer;","import React, { memo } from 'react';\r\nimport { StoreConsumer } from '../contexts'\r\n\r\nconst Header = memo(() => {\r\n\r\n  return (\r\n    <StoreConsumer>\r\n      { ctx => (\r\n        <header>\r\n          <h1>{ ctx.search }</h1>\r\n        </header>\r\n      )}\r\n    </StoreConsumer>\r\n  )\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport TileContainer from './Tile/TileContainer';\r\nimport Header from './Header';\r\n// import WindowingTileContainer from './WindowingTileContainer';\r\n\r\nconst Home = () => {\r\n  \r\n  return (\r\n    <>\r\n      <Header />      \r\n      <TileContainer />\r\n      {/* <WindowingTileContainer /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './css/App.scss';\nimport Navbar from './components/Nav/Navbar';\nimport Home from './components/Home'\n\nconst Favorites = lazy(() => import('./components/Favorites'))\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/favorites\" render={() => (\n              <Suspense delayMs={1000} fallback={<div>Loading!</div>}>\n                <Favorites />\n              </Suspense>\n          )} />\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from \"./contexts/\";\n\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [ [\"transform-remove-console\"], { \"exclude\": [\"error\", \"warn\"] } ]\n});\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}