{"version":3,"sources":["components/ErrorMsg.js","components/Nav/Search.js","components/Nav/Navbar.js","components/Tile/TileContainer.js","components/Header.js","components/Home.js","App.js","index.js","methods/index.js","contexts/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ErrorMsg","_ref","msg","a","createElement","className","Search","state","text","handleChange","e","_this","setState","Object","defineProperty","target","name","value","clearSearch","prepareSearchQuery","replace","handleSubmit","preventDefault","console","log","query","url","concat","fetch","method","then","r","json","context","handleSearch","catch","err","react_default","onSubmit","this","type","placeholder","onChange","React","PureComponent","contextType","StoreConsumer","Navbar","memo","contexts","ctx","NavLink","exact","to","activeClassName","favorited","Nav_Search","withRouter","Tile","lazy","bind","TileContainer","data","renderTiles","map","tile","favs","localStorage","getItem","JSON","parse","filter","el","id","length","key","fav","_this2","react","delayMs","fallback","searchError","Component","Header","search","Home","Fragment","components_Header","Tile_TileContainer","Favorites","App","Nav_Navbar","Switch","Route","path","component","render","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById","serialize","baseUrl","compiled","kind","slice","title","author","picture","banner_img","header_img","icon_img","thumbnail","score","subscribers","description","creation","calcTime","created_utc","permalink","pluralize","num","words","Math","floor","utcTime","time","Date","getTime","toFixed","StoreContext","createContext","Consumer","StoreProvider","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleFavoriting","handleUnfavoriting","favorites","handleInitialDataFetch","prevState","children","handlePersistingFavs","savedFavs","makeFunctionsAvailable","newFavs","push","objectSpread","setItem","stringify","tileId","rawData","error","setTimeout","inherits","createClass","Provider","props"],"mappings":"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","file":"static/js/main.01b41ad5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ErrorMsg = ({ msg }) => {\r\n\r\n  return (\r\n    <div className='error-msg'>\r\n      { msg }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMsg","import React from 'react';\r\nimport { StoreConsumer } from '../../contexts';\r\n\r\nclass Search extends React.PureComponent {\r\n\r\n  static contextType = StoreConsumer;\r\n\r\n  state = {\r\n    text: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  clearSearch = () => {\r\n    this.setState({\r\n      text: ''\r\n    })\r\n  }\r\n  \r\n  prepareSearchQuery = () => {\r\n    const query = this.state.text\r\n\r\n    return query.replace(' ', '')\r\n  }\r\n  \r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // const url = `https://www.reddit.com/subreddits/search.json?q=${this.state.text}`\r\n    console.log(this.state.text)\r\n\r\n    const query = this.prepareSearchQuery()\r\n    const url = `https://www.reddit.com/r/${query}/top/.json`;\r\n    const options = {\r\n      method: 'GET'\r\n    }\r\n\r\n    fetch(url, options)\r\n    .then(r => r.json())\r\n    .then(r => {\r\n      console.log(`raw`, r)\r\n      this.context.handleSearch(r)\r\n      this.clearSearch()\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      this.context.handleSearch(err)\r\n      this.clearSearch()\r\n      return \r\n    })\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input type='text' className='search-bar' name='text' placeholder='search subreddits' value={this.state.text} onChange={this.handleChange} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search","import React, { memo } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport Search from \"./Search\";\r\nimport { StoreConsumer } from '../../contexts';\r\n\r\nconst Navbar = memo(() => {\r\n\r\n\r\n  return (\r\n\r\n    <StoreConsumer>\r\n\r\n      {ctx => (\r\n\r\n        <nav className=\"nav-bar\">\r\n\r\n          <NavLink exact to=\"/\" className=\"nav-item\" activeClassName=\"active\">\r\n            <i className=\"fab fa-reddit-alien\" />\r\n            Home\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/favorites\" className=\"nav-item\" activeClassName=\"active\">\r\n            <i className=\"fas fa-heart\" />\r\n            Favorites ({ ctx.favorited })\r\n          </NavLink>\r\n\r\n          <Search />\r\n        </nav>\r\n      \r\n      )}\r\n  \r\n    </StoreConsumer>\r\n  ); \r\n})\r\n\r\nexport default withRouter(Navbar)","import React, { Component, Suspense, lazy } from 'react';\r\nimport { StoreConsumer } from '../../contexts';\r\nimport ErrorMsg from '../ErrorMsg';\r\n\r\nconst Tile = lazy(() => import('./Tile'))\r\n\r\n\r\nclass TileContainer extends Component {\r\n\r\n  static contextType = StoreConsumer;\r\n\r\n  state = {\r\n    data: null,\r\n  }\r\n\r\n  renderTiles = () => {\r\n    return this.state.data.map(tile => {\r\n\r\n      let favs = localStorage.getItem('favs')\r\n\r\n      if (favs) {\r\n        favs = JSON.parse(favs)\r\n\r\n        const fav = favs.filter(el => el.id === tile.id)\r\n\r\n        if (fav.length) {\r\n          return <Tile key={tile.id} tile={tile} fav={true} />\r\n        }\r\n      }\r\n\r\n      return <Tile key={tile.id} tile={tile} fav={false} />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <StoreConsumer>\r\n        { ctx => {\r\n          \r\n          if(ctx.data !== this.state.data) {\r\n            this.setState({\r\n                data: ctx.data\r\n            }, () => console.log(`updated state`))\r\n          }\r\n\r\n          return (\r\n\r\n            <main className='tile-area'>\r\n              <Suspense delayMs={1000} fallback={<div>Loading...</div>}>\r\n\r\n                { ctx.searchError ? <ErrorMsg msg={`Unfortunately such a subreddit can't be found`} /> : null }\r\n\r\n                { this.state.data ? this.renderTiles() : null }\r\n\r\n              </Suspense>\r\n            </main>\r\n\r\n          )}\r\n        }\r\n      </StoreConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TileContainer;","import React, { memo } from 'react';\r\nimport { StoreConsumer } from '../contexts'\r\n\r\nconst Header = memo(() => {\r\n\r\n  return (\r\n    <StoreConsumer>\r\n      { ctx => (\r\n        <header>\r\n          <h1>{ ctx.search }</h1>\r\n        </header>\r\n      )}\r\n    </StoreConsumer>\r\n  )\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport TileContainer from './Tile/TileContainer';\r\nimport Header from './Header';\r\n// import WindowingTileContainer from './WindowingTileContainer';\r\n\r\nconst Home = () => {\r\n  \r\n  return (\r\n    <>\r\n      <Header />      \r\n      <TileContainer />\r\n      {/* <WindowingTileContainer /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './css/App.scss';\nimport Navbar from './components/Nav/Navbar';\nimport Home from './components/Home'\n\nconst Favorites = lazy(() => import('./components/Favorites'))\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/favorites\" render={() => (\n              <Suspense delayMs={1000} fallback={<div>Loading!</div>}>\n                <Favorites />\n              </Suspense>\n          )} />\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from \"./contexts/\";\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","export const serialize = (data) => {\r\n\r\n  const baseUrl = `https://www.reddit.com`\r\n  const compiled = {}\r\n\r\n  compiled.id = data.id\r\n  compiled.kind = data.name.slice(0,2)\r\n  compiled.title = data.title || \"\"\r\n  compiled.author = data.author || data.name || \"\"\r\n  compiled.picture = compiled.kind === 't3' ? data.url : data.banner_img || data.header_img || data.icon_img || \"http://i.imgur.com/lqHeX.jpg\"\r\n  compiled.thumbnail = data.thumbnail || \"\"\r\n  compiled.score = data.score || data.subscribers || 0\r\n  compiled.description = data.description || \"\"\r\n  compiled.creation = calcTime(data.created_utc)\r\n  compiled.url = data.permalink ? baseUrl + data.permalink : baseUrl + data.url  \r\n\r\n  return compiled\r\n}\r\n\r\nexport const pluralize = (num, words) => {\r\n  \r\n  if (Math.floor(num) === 1) {\r\n    return num + ` ${words}`\r\n\r\n  } else {\r\n    return num + ` ${words}s`\r\n  }\r\n}\r\n\r\nexport const calcTime = (utcTime) => {\r\n\r\n  let time = ((new Date().getTime() - new Date(utcTime * 1000)) / (1000 * 60 * 60))\r\n\r\n  if (time > 24) {\r\n\r\n    time = ((new Date().getTime() - new Date(utcTime * 1000)) / (1000 * 60 * 60 * 24)).toFixed(0)\r\n    return pluralize(time, `day`) + ` ago`\r\n\r\n  } else if (time < 1) {\r\n\r\n    time = ((new Date().getTime() - new Date(utcTime * 1000)) / (1000 * 60)).toFixed(0)\r\n    return pluralize(time, `minute`) + ` ago`\r\n\r\n  } else {\r\n\r\n    time = time.toFixed(0)\r\n    return pluralize(time, `hour`) + ` ago`\r\n  }\r\n}","import React from 'react';\r\nimport { serialize } from \"../methods\";\r\n\r\nconst StoreContext = React.createContext();\r\n\r\nexport const StoreConsumer = StoreContext.Consumer\r\n\r\nexport class StoreProvider extends React.Component {\r\n\r\n  state = {\r\n    favorited: 0,\r\n    handleSearch: null,\r\n    handleFavoriting: null,\r\n    handleUnfavoriting: null,\r\n    favorites: [],\r\n    data: null,\r\n    searchError: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(`ctx mounted`)\r\n    this.handleInitialDataFetch()\r\n    this.handlePersistingFavs()\r\n    this.makeFunctionsAvailable()\r\n  }\r\n\r\n  handleInitialDataFetch = () => {\r\n    fetch(\"https://www.reddit.com/r/analog/top/.json\")\r\n      .then(r => r.json())\r\n      .then(r => {\r\n        console.log(r)\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n            data: r.data.children.map(el => serialize(el.data))\r\n          }\r\n        }, () => console.log(this.state))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  \r\n\r\n  handlePersistingFavs = () => {\r\n    const savedFavs = localStorage.getItem(\"favs\")\r\n    const favorites = JSON.parse(savedFavs)\r\n\r\n    if (savedFavs) {\r\n      this.setState({\r\n\r\n        favorites,\r\n        favorited: favorites.length\r\n\r\n      }, () => console.log(`StoreProvider DidMount:`, this.state))\r\n    }\r\n  }\r\n\r\n  makeFunctionsAvailable = () => {\r\n\r\n    this.setState({\r\n      handleSearch: this.handleSearch,\r\n      handleFavoriting: this.handleFavoriting,\r\n      handleUnfavoriting: this.handleUnfavoriting\r\n    });\r\n  }\r\n\r\n  handleFavoriting = (tile) => {\r\n    this.setState(prevState => {\r\n\r\n      const savedFavs = localStorage.getItem('favs')\r\n      let newFavs\r\n\r\n      if(savedFavs) {\r\n        newFavs = JSON.parse(savedFavs)\r\n      \r\n      } else {\r\n        newFavs = prevState.favorites\r\n      }\r\n\r\n      newFavs.push({...tile})\r\n\r\n      localStorage.setItem('favs', JSON.stringify(newFavs))\r\n\r\n      return {\r\n        favorited: ++prevState.favorited,\r\n        favorites: newFavs\r\n      }\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  handleUnfavoriting = (tileId) => {\r\n\r\n    const savedFavs = localStorage.getItem(\"favs\")\r\n    let newFavs\r\n    \r\n    this.setState(prevState => {\r\n      \r\n      if(savedFavs) {\r\n        newFavs = JSON.parse(savedFavs).filter(fav => fav.id !== tileId)\r\n      \r\n      } else {\r\n        newFavs = prevState.favorites.filter(fav => fav.id !== tileId)  \r\n      }\r\n\r\n      localStorage.setItem('favs', JSON.stringify(newFavs))\r\n\r\n      return {\r\n        favorited: --prevState.favorited,\r\n        favorites: newFavs\r\n      }\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  handleSearch = (rawData) => {\r\n\r\n    if(rawData.error || !rawData.data || !rawData.data.children) {\r\n\r\n      this.setState({\r\n        searchError: true\r\n      })\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          searchError: false\r\n        })\r\n      }, 2500)\r\n\r\n      return\r\n    }\r\n\r\n    console.log(rawData.data.children)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        data: rawData.data.children.map(el => serialize(el.data))\r\n      }\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StoreContext.Provider value={this.state}>\r\n        { this.props.children }\r\n      </StoreContext.Provider>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}